<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vathsal</title>
    <link>https://vathsal.github.io/myWebsite/</link>
    <description>Recent content on Vathsal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Oct 2015 13:07:31 +0200</lastBuildDate>
    
	<atom:link href="https://vathsal.github.io/myWebsite/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Migrate from Jekyll</title>
      <link>https://vathsal.github.io/myWebsite/blog/migrate-from-jekyll/</link>
      <pubDate>Sat, 10 Oct 2015 13:07:31 +0200</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/blog/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Linked post</title>
      <link>https://vathsal.github.io/myWebsite/blog/linked-post/</link>
      <pubDate>Fri, 02 Oct 2015 21:49:20 +0200</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/blog/linked-post/</guid>
      <description>I&amp;rsquo;m a linked post in the menu. You can add other posts by adding the following line to the frontmatter:
menu = &amp;quot;main&amp;quot;  Lorem ipsum dolor sit amet, consectetur adipiscing elit. In mauris nulla, vestibulum vel auctor sed, posuere eu lorem. Aliquam consequat augue ut accumsan mollis. Suspendisse malesuada sodales tincidunt. Vivamus sed erat ac augue bibendum porta sed id ipsum. Ut mollis mauris eget ligula sagittis cursus. Aliquam id pharetra tellus.</description>
    </item>
    
    <item>
      <title>A look inside Facebook</title>
      <link>https://vathsal.github.io/myWebsite/work/project-22/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/work/project-22/</guid>
      <description>Sorry ! Will be updated soon. Please come back later.</description>
    </item>
    
    <item>
      <title>Attention management system</title>
      <link>https://vathsal.github.io/myWebsite/work/project-31/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/work/project-31/</guid>
      <description>Sorry ! Will be updated soon. Please come back later.</description>
    </item>
    
    <item>
      <title>Go is for lovers</title>
      <link>https://vathsal.github.io/myWebsite/blog/go-is-for-lovers/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/blog/go-is-for-lovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Motion Capture Interpolator</title>
      <link>https://vathsal.github.io/myWebsite/work/project-5/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/work/project-5/</guid>
      <description>Aim: The aim of this project was to understand and evaluate the different interpolation schemes. For the purpose of this project, we implemented 4 interpolation schemes, namely:
 • Linear interpolation using Euler angles • Bezier interpolation using Euler angles • Spherical Linear interpolation using quaternions • Spherical Bezier interpolation using quaternions  Procedure: Step 1 :
To start with, we were given a bunch of (ASF + AMC) files corresponding to different motion capture sequences.</description>
    </item>
    
    <item>
      <title>Smoke Simulation</title>
      <link>https://vathsal.github.io/myWebsite/work/project-6/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/work/project-6/</guid>
      <description>Sorry ! Will be updated soon. Please come back later.</description>
    </item>
    
    <item>
      <title>The YBVR journey</title>
      <link>https://vathsal.github.io/myWebsite/work/project-21/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/work/project-21/</guid>
      <description>Sorry ! Will be updated soon. Please come back later.</description>
    </item>
    
    <item>
      <title>Hugo is for lovers</title>
      <link>https://vathsal.github.io/myWebsite/blog/hugo-is-for-lovers/</link>
      <pubDate>Mon, 03 Aug 2015 13:39:46 +0200</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/blog/hugo-is-for-lovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Creating a new theme</title>
      <link>https://vathsal.github.io/myWebsite/blog/creating-a-new-theme/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/blog/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://vathsal.github.io/myWebsite/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/about/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://vathsal.github.io/myWebsite/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/resume/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pose transfer of an Armadillo using eigen functions</title>
      <link>https://vathsal.github.io/myWebsite/work/project-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/work/project-1/</guid>
      <description>Aim:  The aim of this project is to understand the role of eigenfunctions in pose estimation  Background: What are Eigenfunctions and why we are using them ?
Now that we understand the value of eigenfunctions and their usage. Let’s see how these can be applied to mesh deformation.
Procedure: Consider 2 poses that you would like to do the pose transfer between. Let us consider Pose-A as the source mesh and Pose-B as the destination mesh.</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>https://vathsal.github.io/myWebsite/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/contact/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Service</title>
      <link>https://vathsal.github.io/myWebsite/service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/service/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Simulating a Constrained Particle System</title>
      <link>https://vathsal.github.io/myWebsite/work/project-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/work/project-4/</guid>
      <description>Aim: The aim of the project was to use a particle system to model a simple deformable chain that moves along a ring and obeys :
 Newtons Laws Geometric Constraints  Background : For this system, we define three constraints, namely :
 Rigid Edge Constraint : This helps to keep the objects fixed in position and rotation relative to each other. Pin Constraint : This helps to prevent the chain from falling away under gravity.</description>
    </item>
    
    <item>
      <title>Simulating a Jello cube</title>
      <link>https://vathsal.github.io/myWebsite/work/project-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/work/project-3/</guid>
      <description>Aim: The aim of this project was to understand the application of 3D mass-spring network in physically based modelling. To achieve this, we programmed a physically-based simulation of a jello cube which was modelled using a 3D mass spring network. The jello cube was modelled to be made of elastic material, i.e., when the jello cube is stretched, it will try to contract and when the jello cube is squeezed, it will try to inflate back to the original shape.</description>
    </item>
    
    <item>
      <title>Simulating a Roller Coaster using Splines</title>
      <link>https://vathsal.github.io/myWebsite/work/project-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/work/project-2/</guid>
      <description>Aim : Having been introduced to splines and OpenGL programming, the aim of this project was to understand the application of splines. For this, we modelled a roller coaster using Catmull-Rom splines and then simulated a first person view of a person riding the roller coaster in an immersive environment using OpenGL lighting and texture mapping.
Background : Why choose catmul rom splines ?
Catmull-Rom splines are a family of cubic interpolating splines such that the tangent at each point is calculated using the next and the previous position on the spline.</description>
    </item>
    
    <item>
      <title>Work</title>
      <link>https://vathsal.github.io/myWebsite/work/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vathsal.github.io/myWebsite/work/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>